// E => T (('+' | '-') T)*
// T => F (('*' | '/') F)*
// F => '(' E ')' | N
// N => D D*
// D => '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'

        I_CALL E
        I_HALT_SUCCESSFULLY

//--------------------------------------------------------------------------------
// E => T (('+' | '-') T)*
E:
        I_CALL T
E_L4:
        I_CHOICE E_L0
E_L5:
        I_CHOICE E_L1
        I_CHAR '+'
        I_COMMIT E_L2
E_L1:
        I_CHOICE E_L3
        I_CHAR '-'
        I_COMMIT E_L2
E_L2:
        I_CALL T
        I_PARTIAL_COMMIT E_L5
E_L3:
        I_FAIL
E_L0:
        I_RETURN

//--------------------------------------------------------------------------------
// T => F (('*' | '/') F)*
T:
        I_CALL F
T_L4:
        I_CHOICE T_L0
T_L5:
        I_CHOICE T_L1
        I_CHAR '*'
        I_COMMIT T_L2
T_L1:
        I_CHOICE T_L3
        I_CHAR '/'
        I_COMMIT T_L2
T_L2:
        I_CALL F
        I_PARTIAL_COMMIT T_L5
T_L3:
        I_FAIL
T_L0:
        I_RETURN

//--------------------------------------------------------------------------------
// F => '(' E ')' | N
F:
        I_CHOICE F_0
        I_CHAR '('
        I_CALL E
        I_CHAR ')'
        I_COMMIT F_1
F_0:
        I_CHOICE F_2
        I_CALL N
        I_COMMIT F_1
F_2:
        I_FAIL
F_1:
        I_RETURN

//--------------------------------------------------------------------------------
// N => D D*
N:
        I_CALL D
        I_CHOICE N_0
N_1:
        I_CALL D
        I_PARTIAL_COMMIT N_1
N_0:
        I_RETURN

//--------------------------------------------------------------------------------
// D => range('0', '9')
D:
        I_RANGE '0', '9'
        I_RETURN